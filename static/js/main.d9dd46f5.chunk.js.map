{"version":3,"sources":["components/DeckView.tsx","components/CardChip.tsx","components/Utils.tsx","components/CardsInput.tsx","components/OddsView.tsx","components/Main.tsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","button","margin","spacing","container","display","flexWrap","textField","marginLeft","marginRight","width","DeckView","_ref","deck","setDeck","classes","cards","map","card","concat","numUnseen","numSeen","name","join","_useState","useState","_useState2","Object","slicedToArray","value","setValue","react_default","a","createElement","Fragment","className","noValidate","autoComplete","TextField","id","label","multiline","rowsMax","onChange","e","target","style","Button","onClick","_deck","split","isNaN","parseInt","charAt","slice","replace","filter","Boolean","handleSubmit","variant","veryLikely","backgroundColor","likely","probable","improbable","unlikely","veryUnlikely","CardChip","num","odds","p","prob","core_browser_esm","Chip","css","cursor","clickable","size","avatar","Avatar","border","undefined","repeat","deleteIcon","hyp","x","n","m","nn","nz","mz","h","s","k","i","compute","population","successes","sample","n_successes","Prob","Math","round","CardsInput","type","inputProps","min","max","textAlign","fontSize","OddsView","_React$useState","React","_React$useState2","setCards","unseenCount","sumBy","seenCount","numCards","one","String","two","three","sortedDeck","orderBy","alignItems","justifyContent","ButtonGroup","components_CardsInput","val","Typography","component","cardOdds","CardChip_CardChip","index","objectSpread","handleUnseenCardClick","handleSeenCardClick","marginTop","TabContainer","children","dir","padding","root","palette","background","paper","SampleDeck","FullWidthTabs","useTheme","_useState3","_useState4","Helmet","content","AppBar","position","color","Tabs","event","newValue","indicatorColor","textColor","Tab","lib_default","axis","direction","onChangeIndex","OddsView_OddsView","DeckView_DeckView","App","apps","setApps","async","src","charset","http-equiv","rel","href","defer","sizes","toConsumableArray","Array","react_new_window_default","key","title","features","resizable","height","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9dd46f5.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Deck } from './Main'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport { Button } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      margin: theme.spacing(1),\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 300,\n    },\n  })\n)\n\nexport const DeckView: React.FC<{\n  deck: Deck\n  setDeck: (deck: Deck) => void\n}> = ({ deck, setDeck }) => {\n  const classes = useStyles()\n  const cards = deck\n    .map(card => `${card.numUnseen + card.numSeen} ${card.name}`)\n    .join('\\n')\n  const [value, setValue] = useState(cards)\n\n  const handleSubmit = () => {\n    const _cards = value.split('\\n')\n    const _deck = _cards\n      .map(card => {\n        if (!isNaN(parseInt(card.charAt(0), 10))) {\n          return {\n            name: card.slice(2).replace(/\\//g, ''),\n            numUnseen: parseInt(card.charAt(0), 10),\n            numSeen: 0,\n          }\n        }\n        return null\n      })\n      .filter(Boolean)\n    setDeck(_deck as any[])\n  }\n\n  return (\n    <>\n      {/* <label htmlFor=\"deckLink\">Link</label>\n      <input style={{ width: '300px' }} id=\"deckLink\" type=\"text\" /> */}\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <TextField\n          id=\"standard-multiline-flexible\"\n          label=\"Conflict deck\"\n          multiline\n          rowsMax=\"100\"\n          value={value}\n          onChange={e => setValue(e.target.value)}\n          className={classes.textField}\n          style={{ width: 300 }}\n          margin=\"normal\"\n        />\n      </form>\n      <Button onClick={() => handleSubmit()} variant=\"contained\">\n        Load Deck\n      </Button>\n    </>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport React from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    veryLikely: {\n      backgroundColor: '#ea9999',\n    },\n    likely: {\n      backgroundColor: '#f9cb9c',\n    },\n    probable: {\n      backgroundColor: '#ffe599',\n    },\n    improbable: {\n      backgroundColor: '#b6d7a8',\n    },\n    unlikely: {\n      backgroundColor: '#b4d2ff',\n    },\n    veryUnlikely: {\n      backgroundColor: '#ddd',\n    },\n  })\n)\n\nexport const CardChip: React.FC<{\n  num: number\n  name: string\n  odds?: string\n  onClick: () => void\n}> = ({ num, name, odds, onClick }) => {\n  const classes = useStyles()\n  const p = !!odds && parseInt(odds, 10)\n  const prob = !odds\n    ? 'veryUnlikely'\n    : p > 83\n    ? 'veryLikely'\n    : p > 66\n    ? 'likely'\n    : p > 49\n    ? 'probable'\n    : p > 32\n    ? 'improbable'\n    : p > 16\n    ? 'unlikely'\n    : 'veryUnlikely'\n  return (\n    <Chip\n      css={{ cursor: 'pointer' }}\n      clickable={false}\n      size=\"small\"\n      avatar={\n        !!odds ? (\n          <Avatar\n            style={{ border: '1px solid #fff' }}\n            className={classes[prob!]}\n          >\n            {odds}\n          </Avatar>\n        ) : (\n          undefined\n        )\n      }\n      label={name + ' ' + '•'.repeat(num)}\n      onClick={() => onClick()}\n      className={classes[prob!]}\n      style={{ margin: '4px' }}\n      deleteIcon={<div>hahaha</div>}\n    />\n  )\n}\n","export function hyp(x: number, n: number, m: number, nn: number): number {\n  const nz = m < n ? m : n\n  const mz = m < n ? n : m\n  let h = 1,\n    s = 1,\n    k = 0,\n    i = 0\n  while (i < x) {\n    while (s > 1 && k < nz) {\n      h = h * (1 - mz / (nn - k))\n      s = s * (1 - mz / (nn - k))\n      k = k + 1\n    }\n    h = (h * (nz - i) * (mz - i)) / (i + 1) / (nn - nz - mz + i + 1)\n    s = s + h\n    i = i + 1\n  }\n  while (k < nz) {\n    s = s * (1 - mz / (nn - k))\n    k = k + 1\n  }\n  return s\n}\n\nexport function compute(\n  population: number, // big population\n  successes: number, // success outcomes\n  sample: number, // sample drawn\n  n_successes: number // number\n): number {\n  const p = population // nn\n  const s = successes // m\n  const n = sample // n\n  const x = n_successes // x\n  let Prob\n  if (n <= 0 || s <= 0 || p <= 0) {\n    Prob = 1\n  } else if (s > p || n > p) {\n    Prob = 0\n  } else if (x < 0 || x < n + s - p) {\n    Prob = 0\n  } else if (x >= n || x >= s) {\n    Prob = 1\n  } else {\n    if (2 * s > p) {\n      if (2 * n > p) {\n        Prob = hyp(p - s - n + x, p - n, p - s, p)\n      } else {\n        Prob = 1 - hyp(n - x - 1, n, p - s, p)\n      }\n    } else if (2 * n > p) {\n      Prob = 1 - hyp(s - x - 1, s, p - n, p)\n    } else {\n      Prob = hyp(x, n, s, p)\n    }\n  }\n  return 1 - Math.round(Prob * 100000) / 100000\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport React from 'react'\nimport { TextField } from '@material-ui/core'\n\nconst CardsInput: React.FC<{\n  value: string\n  onChange: (val: string) => void\n}> = ({ value, onChange }) => {\n  return (\n    <TextField\n      type=\"number\"\n      css={{ width: 100 }}\n      label=\"Their hand size\"\n      inputProps={{\n        min: 0,\n        max: 50,\n        style: { textAlign: 'center', fontSize: '2rem' },\n      }}\n      value={value}\n      onChange={e => onChange(e.target.value)}\n      margin=\"normal\"\n    />\n  )\n}\nexport default CardsInput\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport React from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport { CardChip } from './CardChip'\nimport Typography from '@material-ui/core/Typography'\nimport { Deck } from './Main'\nimport sumBy from 'lodash/sumBy'\nimport round from 'lodash/round'\nimport { compute } from './Utils'\nimport { Button, ButtonGroup } from '@material-ui/core'\nimport CardsInput from './CardsInput'\nimport orderBy from 'lodash/orderBy'\n// import useFetch from 'react-fetch-hook'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n  })\n)\n\nexport const OddsView: React.FC<{\n  deck: Deck\n  setDeck: (deck: Deck) => void\n}> = ({ deck, setDeck }) => {\n  const classes = useStyles()\n  const [cards, setCards] = React.useState('9')\n  // const { isLoading, data } = useFetch('https://api.fiveringsdb.com/cards', {\n  //   method: 'GET',\n  // })\n  const unseenCount = sumBy(deck, card => card.numUnseen)\n  const seenCount = sumBy(deck, card => card.numSeen)\n  const numCards = parseInt(cards, 10)\n  const odds = {\n    one: String(round(100 * compute(unseenCount, 1, numCards, 0))),\n    two: String(round(100 * compute(unseenCount, 2, numCards, 0))),\n    three: String(round(100 * compute(unseenCount, 3, numCards, 0))),\n  }\n  const sortedDeck = orderBy(deck, ['numUnseen'], ['desc'])\n  const handleUnseenCardClick = (i: number) => {\n    setCards(String(Math.max(0, numCards - 1)))\n    setDeck(\n      sortedDeck.map((card, index) => {\n        if (index === i)\n          return {\n            ...card,\n            numSeen: card.numSeen + 1,\n            numUnseen: card.numUnseen - 1,\n          }\n        return card\n      })\n    )\n  }\n\n  const handleSeenCardClick = (i: number) => {\n    setDeck(\n      sortedDeck.map((card, index) => {\n        if (index === i)\n          return {\n            ...card,\n            numSeen: card.numSeen - 1,\n            numUnseen: card.numUnseen + 1,\n          }\n        return card\n      })\n    )\n  }\n\n  return (\n    <>\n      <form\n        css={{ alignItems: 'center', justifyContent: 'center' }}\n        className={classes.container}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <ButtonGroup css={{ margin: 16 }}>\n          <Button onClick={() => setCards(String(Math.max(0, numCards - 5)))}>\n            -5\n          </Button>\n          <Button onClick={() => setCards(String(Math.max(0, numCards - 1)))}>\n            -1\n          </Button>\n        </ButtonGroup>\n        <CardsInput value={cards} onChange={(val: string) => setCards(val)} />\n        <ButtonGroup css={{ margin: 16 }}>\n          <Button onClick={() => setCards(String(numCards + 1))}>+1</Button>\n          <Button onClick={() => setCards(String(numCards + 5))}>+5</Button>\n        </ButtonGroup>\n      </form>\n      <Typography variant=\"h6\" component=\"h2\" style={{ textAlign: 'center' }}>\n        {`Unseen Cards ${unseenCount}`}\n      </Typography>\n      {!!sortedDeck &&\n        sortedDeck.map((card, i) => {\n          if (card.numUnseen >= 1) {\n            const cardOdds =\n              card.numUnseen === 1\n                ? odds.one\n                : card.numUnseen === 2\n                ? odds.two\n                : odds.three\n            return (\n              <CardChip\n                num={card.numUnseen}\n                name={card.name}\n                odds={cardOdds}\n                onClick={() => handleUnseenCardClick(i)}\n              />\n            )\n          }\n          return null\n        })}\n      <hr className=\"mt-2 mb-2\" />\n      <Typography variant=\"h6\" component=\"h2\" style={{ textAlign: 'center' }}>\n        {`Seen Cards ${seenCount}`}\n      </Typography>\n      {!!sortedDeck &&\n        sortedDeck.map((card, i) => {\n          if (card.numSeen >= 1) {\n            return (\n              <CardChip\n                num={card.numSeen}\n                name={card.name}\n                onClick={() => handleSeenCardClick(i)}\n              />\n            )\n          }\n          return null\n        })}\n      <div style={{ marginTop: 8 }}>\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            setDeck(\n              sortedDeck.map(card => ({\n                ...card,\n                numSeen: 0,\n                numUnseen: card.numUnseen + card.numSeen,\n              }))\n            )\n          }}\n        >\n          Reset All Seen Cards\n        </Button>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { DeckView } from './DeckView'\nimport { OddsView } from './OddsView'\nimport {\n  makeStyles,\n  Theme,\n  useTheme,\n  createStyles,\n} from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\nimport SwipeableViews from 'react-swipeable-views'\n\nexport type Deck = Array<{ name: string; numSeen: number; numUnseen: number }>\n\ninterface TabContainerProps {\n  children?: React.ReactNode\n  dir?: string\n}\n\nfunction TabContainer({ children, dir }: TabContainerProps) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n      {children}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      width: 400,\n    },\n  })\n)\n\nconst SampleDeck = [\n  {\n    name: 'Embrace the Void',\n    numSeen: 0,\n    numUnseen: 3,\n  },\n  {\n    name: 'Fine Katana',\n    numSeen: 0,\n    numUnseen: 2,\n  },\n  {\n    name: 'Ornate Fan',\n    numSeen: 0,\n    numUnseen: 2,\n  },\n  {\n    name: 'Cloud the Mind',\n    numSeen: 0,\n    numUnseen: 3,\n  },\n  {\n    name: 'Ancient Master',\n    numSeen: 0,\n    numUnseen: 3,\n  },\n  {\n    name: 'Shrine Maiden',\n    numSeen: 0,\n    numUnseen: 3,\n  },\n  {\n    name: 'Banzai',\n    numSeen: 0,\n    numUnseen: 3,\n  },\n  {\n    name: 'Censure',\n    numSeen: 0,\n    numUnseen: 3,\n  },\n  {\n    name: 'Court Games',\n    numSeen: 0,\n    numUnseen: 3,\n  },\n  {\n    name: 'Let Go',\n    numSeen: 0,\n    numUnseen: 3,\n  },\n  {\n    name: 'Supernatural Storm',\n    numSeen: 0,\n    numUnseen: 3,\n  },\n  {\n    name: 'Against the Waves',\n    numSeen: 0,\n    numUnseen: 3,\n  },\n  {\n    name: 'Clarity of Purpose',\n    numSeen: 0,\n    numUnseen: 2,\n  },\n  {\n    name: 'Display of Power',\n    numSeen: 0,\n    numUnseen: 2,\n  },\n  {\n    name: 'Consumed by Five Fires',\n    numSeen: 0,\n    numUnseen: 2,\n  },\n]\n\nexport default function FullWidthTabs() {\n  const theme = useTheme()\n  const classes = useStyles(theme)\n  const [value, setValue] = useState(0)\n  const [deck, setDeck] = useState(SampleDeck)\n\n  function handleChange(event: React.ChangeEvent<{}>, newValue: number) {\n    setValue(newValue)\n  }\n\n  function handleChangeIndex(index: number) {\n    setValue(index)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Helmet>\n        <meta name=\"viewport\" content=\"initial-scale=1.0\" />\n      </Helmet>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"Odds\" />\n          <Tab label=\"Opponent's Deck\" />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabContainer dir={theme.direction}>\n          <OddsView deck={deck} setDeck={setDeck} />\n        </TabContainer>\n        <TabContainer dir={theme.direction}>\n          <DeckView deck={deck} setDeck={setDeck} />\n        </TabContainer>\n      </SwipeableViews>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport NewWindow from 'react-new-window'\nimport Main from './components/Main'\nimport './App.css'\n\nfunction App() {\n  const [apps, setApps] = useState(0)\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <script\n          async\n          src=\"https://www.googletagmanager.com/gtag/js?id=UA-143263947-1\"\n        />\n        <script>\n          {`\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){dataLayer.push(arguments);}\n          gtag('js', new Date());\n\n          gtag('config', 'UA-143263947-1')\n          `}\n        </script>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n        <link\n          rel=\"stylesheet\"\n          href=\"http://fonts.googleapis.com/css?family=Roboto:300,400,500,700\"\n          type=\"text/css\"\n        />\n        <link\n          rel=\"stylesheet\"\n          href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n        />\n        <link\n          rel=\"stylesheet\"\n          href=\"https://code.getmdl.io/1.3.0/material.purple-pink.min.css\"\n        />\n        <script defer src=\"https://code.getmdl.io/1.3.0/material.min.js\" />\n        <link\n          rel=\"apple-touch-icon\"\n          sizes=\"180x180\"\n          href=\"/apple-touch-icon.png\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          sizes=\"32x32\"\n          href=\"/favicon-32x32.png\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          sizes=\"16x16\"\n          href=\"/favicon-16x16.png\"\n        />\n        <link rel=\"manifest\" href=\"/site.webmanifest\" />\n        <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#5bbad5\" />\n        <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n        <meta name=\"theme-color\" content=\"#ffffff\" />\n        <script src=\"https://cdn.jsdelivr.net/npm/lodash@4.17.11/lodash.min.js\" />\n        <title>Informant</title>\n      </Helmet>\n      <header className=\"App-header\">\n        <h1 className=\"mdl-typography--display-4\">L5R Informant</h1>\n        <button\n          className=\"mdl-button mdl-js-button mdl-button--raised mdl-button--colored\"\n          onClick={() => setApps(apps + 1)}\n        >\n          Start\n        </button>\n        {[...Array(apps)].map((e, i) => (\n          <NewWindow\n            key={i}\n            title=\"L5R Informant\"\n            features={{\n              resizable: false,\n              height: 700,\n              width: 400,\n            }}\n          >\n            <Main />\n          </NewWindow>\n        ))}\n        <h6 className=\"mdl-typography--title\">\n          Click the button to open the app in a pop-up, then you can close this\n          tab.\n        </h6>\n        <p>\n          You may have to disable your popup blocker on this site. No ads are\n          served here.\n        </p>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}